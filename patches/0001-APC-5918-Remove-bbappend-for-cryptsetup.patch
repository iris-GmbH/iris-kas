From edf6fa9c36ca6d435d8ab67f70df6fe82202301c Mon Sep 17 00:00:00 2001
From: Erik Schumacher <erik.schumacher@iris-sensing.com>
Date: Mon, 6 Feb 2023 11:40:23 +0100
Subject: [PATCH] Remove bbappend for cryptsetup

This bbappend was needed to "update" cryptsetup from 2.3.2 to 2.3.7. But
in kirkstone, the original version already is 2.3.7. So this patch
fails to apply.

Signed-off-by: Jasper Orschulko <jasper@fancydomain.eu>
---
 .../cryptsetup/cryptsetup_%.bbappend          |   5 -
 ...Kernel-keyring-key-descriptor-in-PLA.patch | 122 ------------------
 2 files changed, 127 deletions(-)
 delete mode 100644 recipes-crypto/cryptsetup/cryptsetup_%.bbappend
 delete mode 100644 recipes-crypto/cryptsetup/files/0001-Allow-passing-a-Kernel-keyring-key-descriptor-in-PLA.patch

diff --git a/recipes-crypto/cryptsetup/cryptsetup_%.bbappend b/recipes-crypto/cryptsetup/cryptsetup_%.bbappend
deleted file mode 100644
index 173981d..0000000
--- a/recipes-crypto/cryptsetup/cryptsetup_%.bbappend
+++ /dev/null
@@ -1,5 +0,0 @@
-FILESEXTRAPATHS_prepend := "${THISDIR}/files:"
-
-SRC_URI += " \
-  file://0001-Allow-passing-a-Kernel-keyring-key-descriptor-in-PLA.patch \
-"
diff --git a/recipes-crypto/cryptsetup/files/0001-Allow-passing-a-Kernel-keyring-key-descriptor-in-PLA.patch b/recipes-crypto/cryptsetup/files/0001-Allow-passing-a-Kernel-keyring-key-descriptor-in-PLA.patch
deleted file mode 100644
index 082e5fd..0000000
--- a/recipes-crypto/cryptsetup/files/0001-Allow-passing-a-Kernel-keyring-key-descriptor-in-PLA.patch
+++ /dev/null
@@ -1,122 +0,0 @@
-From 2469692b0f5b6d9f85043c056efece66401b0c15 Mon Sep 17 00:00:00 2001
-From: Lukasz Majewski <lukma@denx.de>
-Date: Wed, 5 Jul 2023 15:06:50 +0200
-Subject: [PATCH] Allow passing a Kernel keyring key descriptor in PLAIN mode.
-
-Signed-off-by: Richard Weinberger <richard@nod.at>
-Signed-off-by: Heiko Schocher <hs@denx.de>
-[ported to 2.3.2]
-Signed-off-by: Lukasz Majewski <lukma@denx.de>
-[ported to 2.3.7]
----
- lib/setup.c      | 15 +++++++++++----
- src/cryptsetup.c | 18 ++++++++++++++++++
- 2 files changed, 29 insertions(+), 4 deletions(-)
-
-diff --git a/lib/setup.c b/lib/setup.c
-index 376b920..3cff6c6 100644
---- a/lib/setup.c
-+++ b/lib/setup.c
-@@ -248,7 +248,7 @@ int init_crypto(struct crypt_device *ctx)
- 
- static int process_key(struct crypt_device *cd, const char *hash_name,
- 		       size_t key_size, const char *pass, size_t passLen,
--		       struct volume_key **vk)
-+		       struct volume_key **vk, uint32_t flags)
- {
- 	int r;
- 
-@@ -259,6 +259,13 @@ static int process_key(struct crypt_device *cd, const char *hash_name,
- 	if (!*vk)
- 		return -ENOMEM;
- 
-+	if (flags & CRYPT_ACTIVATE_KEYRING_KEY) {
-+		(*vk)->key_description = strdup(pass);
-+		(*vk)->keylength = key_size;
-+
-+		return 0;
-+	}
-+
- 	if (hash_name) {
- 		r = crypt_plain_hash(cd, hash_name, (*vk)->key, key_size, pass, passLen);
- 		if (r < 0) {
-@@ -4150,7 +4157,7 @@ static int _activate_by_passphrase(struct crypt_device *cd,
- 
- 		r = process_key(cd, cd->u.plain.hdr.hash,
- 				cd->u.plain.key_size,
--				passphrase, passphrase_size, &vk);
-+				passphrase, passphrase_size, &vk, flags);
- 		if (r < 0)
- 			goto out;
- 
-@@ -4693,7 +4700,7 @@ int crypt_volume_key_get(struct crypt_device *cd,
- 
- 	if (isPLAIN(cd->type) && cd->u.plain.hdr.hash) {
- 		r = process_key(cd, cd->u.plain.hdr.hash, key_len,
--				passphrase, passphrase_size, &vk);
-+				passphrase, passphrase_size, &vk, 0);
- 		if (r < 0)
- 			log_err(cd, _("Cannot retrieve volume key for plain device."));
- 	} else if (isLUKS1(cd->type)) {
-@@ -5936,7 +5943,7 @@ int crypt_use_keyring_for_vk(struct crypt_device *cd)
- 	uint32_t dmc_flags;
- 
- 	/* dm backend must be initialized */
--	if (!cd || !isLUKS2(cd->type))
-+	if (!cd)
- 		return 0;
- 
- 	if (!_vk_via_keyring || !kernel_keyring_support())
-diff --git a/src/cryptsetup.c b/src/cryptsetup.c
-index fcc3571..0d0dba2 100644
---- a/src/cryptsetup.c
-+++ b/src/cryptsetup.c
-@@ -30,6 +30,7 @@ static char *opt_hash = NULL;
- static char *opt_json_file = NULL;
- static char *opt_key_file = NULL;
- static char *opt_keyfile_stdin = NULL;
-+static const char *opt_key_desc = NULL;
- static char *opt_keyfiles[MAX_KEYFILES];
- static char *opt_master_key_file = NULL;
- static char *opt_header_backup_file = NULL;
-@@ -372,6 +373,9 @@ static int action_open_plain(void)
- 	if (opt_shared)
- 		activate_flags |= CRYPT_ACTIVATE_SHARED;
- 
-+	if (opt_key_desc)
-+		activate_flags |= CRYPT_ACTIVATE_KEYRING_KEY;
-+
- 	_set_activation_flags(&activate_flags);
- 
- 	if (!tools_is_stdin(opt_key_file)) {
-@@ -384,6 +388,19 @@ static int action_open_plain(void)
- 		r = crypt_activate_by_keyfile_device_offset(cd, action_argv[1],
- 			CRYPT_ANY_SLOT, opt_key_file, key_size_max,
- 			opt_keyfile_offset, activate_flags);
-+
-+	} else if (opt_key_desc) {
-+		password = (char *)opt_key_desc;
-+		passwordLen = strlen(opt_key_desc);
-+
-+		r = crypt_activate_by_passphrase(cd, action_argv[1],
-+			CRYPT_ANY_SLOT, password, passwordLen, activate_flags);
-+
-+		//free(password);
-+		password = NULL;
-+
-+		if (r < 0)
-+			goto out;
- 	} else {
- 		key_size_max = (opt_key_file && !params.hash) ? key_size : (size_t)opt_keyfile_size;
- 		r = tools_get_key(NULL, &password, &passwordLen,
-@@ -3648,6 +3665,7 @@ int main(int argc, const char **argv)
- 		{ "hash",              'h',  POPT_ARG_STRING, &opt_hash,                0, N_("The hash used to create the encryption key from the passphrase"), NULL },
- 		{ "verify-passphrase", 'y',  POPT_ARG_NONE, &opt_verify_passphrase,     0, N_("Verifies the passphrase by asking for it twice"), NULL },
- 		{ "key-file",          'd',  POPT_ARG_STRING, NULL,                     6, N_("Read the key from a file"), NULL },
-+		{ "key-desc",         '\0',  POPT_ARG_STRING, &opt_key_desc,            0, N_("Keyring descriptor to use"), NULL },
- 		{ "master-key-file",  '\0',  POPT_ARG_STRING, &opt_master_key_file,     0, N_("Read the volume (master) key from file."), NULL },
- 		{ "dump-master-key",  '\0',  POPT_ARG_NONE, &opt_dump_master_key,       0, N_("Dump volume (master) key instead of keyslots info"), NULL },
- 		{ "key-size",          's',  POPT_ARG_INT, &opt_key_size,               0, N_("The size of the encryption key"), N_("BITS") },
--- 
-2.37.2
-
-- 
2.41.0

